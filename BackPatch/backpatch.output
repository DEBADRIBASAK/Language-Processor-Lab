Terminals unused in grammar

   FOR
   ERR


Grammar

    0 $accept: calclist $end

    1 exp: %empty
    2    | exp '+' exp
    3    | exp '-' exp
    4    | exp '/' exp
    5    | exp '*' exp
    6    | exp '@' exp
    7    | exp '%' exp
    8    | INT idlist
    9    | FLOAT idlist
   10    | ID
   11    | ID ASSGN exp
   12    | exp CMP exp
   13    | exp BIT exp
   14    | exp LOG sent exp
   15    | INTEGER
   16    | REAL
   17    | '(' exp ')'

   18 stmt: stmt ';' sent stmt
   19     | IF '(' exp ')' sent '{' stmt '}' ELSE next_sent sent '{' stmt '}'
   20     | IF '(' exp ')' sent '{' stmt '}'
   21     | WHILE sent '(' exp ')' sent '{' stmt '}'
   22     | exp

   23 idlist: ID
   24       | ID ',' idlist

   25 sent: %empty

   26 next_sent: %empty

   27 calclist: %empty
   28         | MAIN '{' stmt '}'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 7
'(' (40) 17 19 20 21
')' (41) 17 19 20 21
'*' (42) 5
'+' (43) 2
',' (44) 24
'-' (45) 3
'/' (47) 4
';' (59) 18
'@' (64) 6
'{' (123) 19 20 21 28
'}' (125) 19 20 21 28
error (256)
ASSGN (258) 11
CMP (259) 12
LOG (260) 14
BIT (261) 13
IF (262) 19 20
ELSE (263) 19
WHILE (264) 21
FOR (265)
ID (266) 10 11 23 24
INTEGER (267) 15
REAL (268) 16
INT (269) 8
FLOAT (270) 9
MAIN (271) 28
ERR (272)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
exp (31)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2
    3 4 5 6 7 11 12 13 14 17 19 20 21 22
stmt (32)
    on left: 18 19 20 21 22, on right: 18 19 20 21 28
idlist (33)
    on left: 23 24, on right: 8 9 24
sent (34)
    on left: 25, on right: 14 18 19 20 21
next_sent (35)
    on left: 26, on right: 19
calclist (36)
    on left: 27 28, on right: 0


State 0

    0 $accept: . calclist $end

    MAIN  shift, and go to state 1

    $default  reduce using rule 27 (calclist)

    calclist  go to state 2


State 1

   28 calclist: MAIN . '{' stmt '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: calclist . $end

    $end  shift, and go to state 4


State 3

   28 calclist: MAIN '{' . stmt '}'

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp   go to state 13
    stmt  go to state 14


State 4

    0 $accept: calclist $end .

    $default  accept


State 5

   19 stmt: IF . '(' exp ')' sent '{' stmt '}' ELSE next_sent sent '{' stmt '}'
   20     | IF . '(' exp ')' sent '{' stmt '}'

    '('  shift, and go to state 15


State 6

   21 stmt: WHILE . sent '(' exp ')' sent '{' stmt '}'

    $default  reduce using rule 25 (sent)

    sent  go to state 16


State 7

   10 exp: ID .
   11    | ID . ASSGN exp

    ASSGN  shift, and go to state 17

    $default  reduce using rule 10 (exp)


State 8

   15 exp: INTEGER .

    $default  reduce using rule 15 (exp)


State 9

   16 exp: REAL .

    $default  reduce using rule 16 (exp)


State 10

    8 exp: INT . idlist

    ID  shift, and go to state 18

    idlist  go to state 19


State 11

    9 exp: FLOAT . idlist

    ID  shift, and go to state 18

    idlist  go to state 20


State 12

   17 exp: '(' . exp ')'

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 21


State 13

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp
   22 stmt: exp .

    CMP  shift, and go to state 22
    LOG  shift, and go to state 23
    BIT  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 22 (stmt)


State 14

   18 stmt: stmt . ';' sent stmt
   28 calclist: MAIN '{' stmt . '}'

    ';'  shift, and go to state 31
    '}'  shift, and go to state 32


State 15

   19 stmt: IF '(' . exp ')' sent '{' stmt '}' ELSE next_sent sent '{' stmt '}'
   20     | IF '(' . exp ')' sent '{' stmt '}'

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 33


State 16

   21 stmt: WHILE sent . '(' exp ')' sent '{' stmt '}'

    '('  shift, and go to state 34


State 17

   11 exp: ID ASSGN . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 35


State 18

   23 idlist: ID .
   24       | ID . ',' idlist

    ','  shift, and go to state 36

    $default  reduce using rule 23 (idlist)


State 19

    8 exp: INT idlist .

    $default  reduce using rule 8 (exp)


State 20

    9 exp: FLOAT idlist .

    $default  reduce using rule 9 (exp)


State 21

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp
   17    | '(' exp . ')'

    CMP  shift, and go to state 22
    LOG  shift, and go to state 23
    BIT  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30
    ')'  shift, and go to state 37


State 22

   12 exp: exp CMP . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 38


State 23

   14 exp: exp LOG . sent exp

    $default  reduce using rule 25 (sent)

    sent  go to state 39


State 24

   13 exp: exp BIT . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 40


State 25

    2 exp: exp '+' . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 41


State 26

    3 exp: exp '-' . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 42


State 27

    5 exp: exp '*' . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 43


State 28

    4 exp: exp '/' . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 44


State 29

    6 exp: exp '@' . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 45


State 30

    7 exp: exp '%' . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 46


State 31

   18 stmt: stmt ';' . sent stmt

    $default  reduce using rule 25 (sent)

    sent  go to state 47


State 32

   28 calclist: MAIN '{' stmt '}' .

    $default  reduce using rule 28 (calclist)


State 33

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp
   19 stmt: IF '(' exp . ')' sent '{' stmt '}' ELSE next_sent sent '{' stmt '}'
   20     | IF '(' exp . ')' sent '{' stmt '}'

    CMP  shift, and go to state 22
    LOG  shift, and go to state 23
    BIT  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30
    ')'  shift, and go to state 48


State 34

   21 stmt: WHILE sent '(' . exp ')' sent '{' stmt '}'

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 49


State 35

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   11    | ID ASSGN exp .
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp

    CMP  shift, and go to state 22
    LOG  shift, and go to state 23
    BIT  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 11 (exp)


State 36

   24 idlist: ID ',' . idlist

    ID  shift, and go to state 18

    idlist  go to state 50


State 37

   17 exp: '(' exp ')' .

    $default  reduce using rule 17 (exp)


State 38

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   12    | exp CMP exp .
   13    | exp . BIT exp
   14    | exp . LOG sent exp

    LOG  shift, and go to state 23
    BIT  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 12 (exp)


State 39

   14 exp: exp LOG sent . exp

    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp  go to state 51


State 40

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   13    | exp BIT exp .
   14    | exp . LOG sent exp

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 13 (exp)


State 41

    2 exp: exp . '+' exp
    2    | exp '+' exp .
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 2 (exp)


State 42

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    3    | exp '-' exp .
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 3 (exp)


State 43

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    5    | exp '*' exp .
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp

    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 5 (exp)


State 44

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    4    | exp '/' exp .
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp

    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 4 (exp)


State 45

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    6    | exp '@' exp .
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp

    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 6 (exp)


State 46

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
    7    | exp '%' exp .
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp

    $default  reduce using rule 7 (exp)


State 47

   18 stmt: stmt ';' sent . stmt

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp   go to state 13
    stmt  go to state 52


State 48

   19 stmt: IF '(' exp ')' . sent '{' stmt '}' ELSE next_sent sent '{' stmt '}'
   20     | IF '(' exp ')' . sent '{' stmt '}'

    $default  reduce using rule 25 (sent)

    sent  go to state 53


State 49

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp
   21 stmt: WHILE sent '(' exp . ')' sent '{' stmt '}'

    CMP  shift, and go to state 22
    LOG  shift, and go to state 23
    BIT  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30
    ')'  shift, and go to state 54


State 50

   24 idlist: ID ',' idlist .

    $default  reduce using rule 24 (idlist)


State 51

    2 exp: exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '/' exp
    5    | exp . '*' exp
    6    | exp . '@' exp
    7    | exp . '%' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG sent exp
   14    | exp LOG sent exp .

    BIT  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '@'  shift, and go to state 29
    '%'  shift, and go to state 30

    $default  reduce using rule 14 (exp)


State 52

   18 stmt: stmt . ';' sent stmt
   18     | stmt ';' sent stmt .

    $default  reduce using rule 18 (stmt)


State 53

   19 stmt: IF '(' exp ')' sent . '{' stmt '}' ELSE next_sent sent '{' stmt '}'
   20     | IF '(' exp ')' sent . '{' stmt '}'

    '{'  shift, and go to state 55


State 54

   21 stmt: WHILE sent '(' exp ')' . sent '{' stmt '}'

    $default  reduce using rule 25 (sent)

    sent  go to state 56


State 55

   19 stmt: IF '(' exp ')' sent '{' . stmt '}' ELSE next_sent sent '{' stmt '}'
   20     | IF '(' exp ')' sent '{' . stmt '}'

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp   go to state 13
    stmt  go to state 57


State 56

   21 stmt: WHILE sent '(' exp ')' sent . '{' stmt '}'

    '{'  shift, and go to state 58


State 57

   18 stmt: stmt . ';' sent stmt
   19     | IF '(' exp ')' sent '{' stmt . '}' ELSE next_sent sent '{' stmt '}'
   20     | IF '(' exp ')' sent '{' stmt . '}'

    ';'  shift, and go to state 31
    '}'  shift, and go to state 59


State 58

   21 stmt: WHILE sent '(' exp ')' sent '{' . stmt '}'

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp   go to state 13
    stmt  go to state 60


State 59

   19 stmt: IF '(' exp ')' sent '{' stmt '}' . ELSE next_sent sent '{' stmt '}'
   20     | IF '(' exp ')' sent '{' stmt '}' .

    ELSE  shift, and go to state 61

    $default  reduce using rule 20 (stmt)


State 60

   18 stmt: stmt . ';' sent stmt
   21     | WHILE sent '(' exp ')' sent '{' stmt . '}'

    ';'  shift, and go to state 31
    '}'  shift, and go to state 62


State 61

   19 stmt: IF '(' exp ')' sent '{' stmt '}' ELSE . next_sent sent '{' stmt '}'

    $default  reduce using rule 26 (next_sent)

    next_sent  go to state 63


State 62

   21 stmt: WHILE sent '(' exp ')' sent '{' stmt '}' .

    $default  reduce using rule 21 (stmt)


State 63

   19 stmt: IF '(' exp ')' sent '{' stmt '}' ELSE next_sent . sent '{' stmt '}'

    $default  reduce using rule 25 (sent)

    sent  go to state 64


State 64

   19 stmt: IF '(' exp ')' sent '{' stmt '}' ELSE next_sent sent . '{' stmt '}'

    '{'  shift, and go to state 65


State 65

   19 stmt: IF '(' exp ')' sent '{' stmt '}' ELSE next_sent sent '{' . stmt '}'

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    ID       shift, and go to state 7
    INTEGER  shift, and go to state 8
    REAL     shift, and go to state 9
    INT      shift, and go to state 10
    FLOAT    shift, and go to state 11
    '('      shift, and go to state 12

    $default  reduce using rule 1 (exp)

    exp   go to state 13
    stmt  go to state 66


State 66

   18 stmt: stmt . ';' sent stmt
   19     | IF '(' exp ')' sent '{' stmt '}' ELSE next_sent sent '{' stmt . '}'

    ';'  shift, and go to state 31
    '}'  shift, and go to state 67


State 67

   19 stmt: IF '(' exp ')' sent '{' stmt '}' ELSE next_sent sent '{' stmt '}' .

    $default  reduce using rule 19 (stmt)
