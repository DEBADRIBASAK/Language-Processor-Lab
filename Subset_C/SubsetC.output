State 15 conflicts: 3 shift/reduce
State 35 conflicts: 8 shift/reduce
State 56 conflicts: 4 shift/reduce


Grammar

    0 $accept: calclist $end

    1 exp: INTEGER
    2    | FLOAT
    3    | ID
    4    | exp '+' exp
    5    | exp '-' exp
    6    | exp '*' exp
    7    | exp '/' exp
    8    | exp '@' exp
    9    | exp '%' exp
   10    | exp '?' exp ':' exp
   11    | exp LOG exp
   12    | LOG exp
   13    | exp CMP exp
   14    | exp BIT exp
   15    | BIT exp
   16    | ID ASSGN exp
   17    | DATATYPE ID
   18    | '(' exp ')'

   19 stmt: MAIN '{' stmt '}'
   20     | exp ';' stmt
   21     | IF '(' exp ')' '{' stmt '}'
   22     | IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   23     | WHILE '(' exp ')' '{' stmt '}'
   24     | FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   25     | stmt IF '(' exp ')' '{' stmt '}'
   26     | stmt IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt WHILE '(' exp ')' '{' stmt '}'
   28     | stmt FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt ERR
   30     | exp ';'

   31 calclist: %empty
   32         | calclist stmt


Terminals, with rules where they appear

$end (0) 0
'%' (37) 9
'(' (40) 18 21 22 23 24 25 26 27 28
')' (41) 18 21 22 23 24 25 26 27 28
'*' (42) 6
'+' (43) 4
'-' (45) 5
'/' (47) 7
':' (58) 10
';' (59) 20 24 28 30
'?' (63) 10
'@' (64) 8
'{' (123) 19 21 22 23 24 25 26 27 28
'}' (125) 19 21 22 23 24 25 26 27 28
error (256)
MAIN (258) 19
DATATYPE (259) 17
ID (260) 3 16 17
INTEGER (261) 1
FLOAT (262) 2
ERR (263) 29
LOG (264) 11 12
ASSGN (265) 16
BIT (266) 14 15
CMP (267) 13
IF (268) 21 22 25 26
ELSE (269) 22 26
FOR (270) 24 28
WHILE (271) 23 27


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
exp (31)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right:
    4 5 6 7 8 9 10 11 12 13 14 15 16 18 20 21 22 23 24 25 26 27 28
    30
stmt (32)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30, on right: 19 20 21
    22 23 24 25 26 27 28 29 32
calclist (33)
    on left: 31 32, on right: 0 32


State 0

    0 $accept: . calclist $end

    $default  reduce using rule 31 (calclist)

    calclist  go to state 1


State 1

    0 $accept: calclist . $end
   32 calclist: calclist . stmt

    $end      shift, and go to state 2
    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 15


State 2

    0 $accept: calclist $end .

    $default  accept


State 3

   19 stmt: MAIN . '{' stmt '}'

    '{'  shift, and go to state 16


State 4

   17 exp: DATATYPE . ID

    ID  shift, and go to state 17


State 5

    3 exp: ID .
   16    | ID . ASSGN exp

    ASSGN  shift, and go to state 18

    $default  reduce using rule 3 (exp)


State 6

    1 exp: INTEGER .

    $default  reduce using rule 1 (exp)


State 7

    2 exp: FLOAT .

    $default  reduce using rule 2 (exp)


State 8

   18 exp: '(' . exp ')'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 19


State 9

   12 exp: LOG . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 20


State 10

   15 exp: BIT . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 21


State 11

   21 stmt: IF . '(' exp ')' '{' stmt '}'
   22     | IF . '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'

    '('  shift, and go to state 22


State 12

   24 stmt: FOR . '(' exp ';' exp ';' exp ')' '{' stmt '}'

    '('  shift, and go to state 23


State 13

   23 stmt: WHILE . '(' exp ')' '{' stmt '}'

    '('  shift, and go to state 24


State 14

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   20 stmt: exp . ';' stmt
   30     | exp . ';'

    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34
    ';'  shift, and go to state 35


State 15

   25 stmt: stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR
   32 calclist: calclist stmt .

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39

    IF        [reduce using rule 32 (calclist)]
    FOR       [reduce using rule 32 (calclist)]
    WHILE     [reduce using rule 32 (calclist)]
    $default  reduce using rule 32 (calclist)


State 16

   19 stmt: MAIN '{' . stmt '}'

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 40


State 17

   17 exp: DATATYPE ID .

    $default  reduce using rule 17 (exp)


State 18

   16 exp: ID ASSGN . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 41


State 19

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   18    | '(' exp . ')'

    ')'  shift, and go to state 42
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34


State 20

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   12    | LOG exp .
   13    | exp . CMP exp
   14    | exp . BIT exp

    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 12 (exp)


State 21

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   15    | BIT exp .

    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 15 (exp)


State 22

   21 stmt: IF '(' . exp ')' '{' stmt '}'
   22     | IF '(' . exp ')' '{' stmt '}' ELSE '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 43


State 23

   24 stmt: FOR '(' . exp ';' exp ';' exp ')' '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 44


State 24

   23 stmt: WHILE '(' . exp ')' '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 45


State 25

   11 exp: exp LOG . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 46


State 26

   14 exp: exp BIT . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 47


State 27

   13 exp: exp CMP . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 48


State 28

   10 exp: exp '?' . exp ':' exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 49


State 29

    4 exp: exp '+' . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 50


State 30

    5 exp: exp '-' . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 51


State 31

    6 exp: exp '*' . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 52


State 32

    7 exp: exp '/' . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 53


State 33

    9 exp: exp '%' . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 54


State 34

    8 exp: exp '@' . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 55


State 35

   20 stmt: exp ';' . stmt
   30     | exp ';' .

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    MAIN      [reduce using rule 30 (stmt)]
    DATATYPE  [reduce using rule 30 (stmt)]
    ID        [reduce using rule 30 (stmt)]
    INTEGER   [reduce using rule 30 (stmt)]
    FLOAT     [reduce using rule 30 (stmt)]
    IF        [reduce using rule 30 (stmt)]
    FOR       [reduce using rule 30 (stmt)]
    WHILE     [reduce using rule 30 (stmt)]
    $default  reduce using rule 30 (stmt)

    exp   go to state 14
    stmt  go to state 56


State 36

   29 stmt: stmt ERR .

    $default  reduce using rule 29 (stmt)


State 37

   25 stmt: stmt IF . '(' exp ')' '{' stmt '}'
   26     | stmt IF . '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'

    '('  shift, and go to state 57


State 38

   28 stmt: stmt FOR . '(' exp ';' exp ';' exp ')' '{' stmt '}'

    '('  shift, and go to state 58


State 39

   27 stmt: stmt WHILE . '(' exp ')' '{' stmt '}'

    '('  shift, and go to state 59


State 40

   19 stmt: MAIN '{' stmt . '}'
   25     | stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39
    '}'    shift, and go to state 60


State 41

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   16    | ID ASSGN exp .

    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 16 (exp)


State 42

   18 exp: '(' exp ')' .

    $default  reduce using rule 18 (exp)


State 43

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   21 stmt: IF '(' exp . ')' '{' stmt '}'
   22     | IF '(' exp . ')' '{' stmt '}' ELSE '{' stmt '}'

    ')'  shift, and go to state 61
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34


State 44

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   24 stmt: FOR '(' exp . ';' exp ';' exp ')' '{' stmt '}'

    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34
    ';'  shift, and go to state 62


State 45

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   23 stmt: WHILE '(' exp . ')' '{' stmt '}'

    ')'  shift, and go to state 63
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34


State 46

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   11    | exp LOG exp .
   13    | exp . CMP exp
   14    | exp . BIT exp

    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 11 (exp)


State 47

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   14    | exp BIT exp .

    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 14 (exp)


State 48

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   13    | exp CMP exp .
   14    | exp . BIT exp

    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 13 (exp)


State 49

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   10    | exp '?' exp . ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp

    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    ':'  shift, and go to state 64
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34


State 50

    4 exp: exp . '+' exp
    4    | exp '+' exp .
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 4 (exp)


State 51

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    5    | exp '-' exp .
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 5 (exp)


State 52

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    6    | exp '*' exp .
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp

    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 6 (exp)


State 53

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    7    | exp '/' exp .
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp

    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 7 (exp)


State 54

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
    9    | exp '%' exp .
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp

    '@'  shift, and go to state 34

    $default  reduce using rule 9 (exp)


State 55

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    8    | exp '@' exp .
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp

    '@'  shift, and go to state 34

    $default  reduce using rule 8 (exp)


State 56

   20 stmt: exp ';' stmt .
   25     | stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39

    ERR       [reduce using rule 20 (stmt)]
    IF        [reduce using rule 20 (stmt)]
    FOR       [reduce using rule 20 (stmt)]
    WHILE     [reduce using rule 20 (stmt)]
    $default  reduce using rule 20 (stmt)


State 57

   25 stmt: stmt IF '(' . exp ')' '{' stmt '}'
   26     | stmt IF '(' . exp ')' '{' stmt '}' ELSE '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 65


State 58

   28 stmt: stmt FOR '(' . exp ';' exp ';' exp ')' '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 66


State 59

   27 stmt: stmt WHILE '(' . exp ')' '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 67


State 60

   19 stmt: MAIN '{' stmt '}' .

    $default  reduce using rule 19 (stmt)


State 61

   21 stmt: IF '(' exp ')' . '{' stmt '}'
   22     | IF '(' exp ')' . '{' stmt '}' ELSE '{' stmt '}'

    '{'  shift, and go to state 68


State 62

   24 stmt: FOR '(' exp ';' . exp ';' exp ')' '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 69


State 63

   23 stmt: WHILE '(' exp ')' . '{' stmt '}'

    '{'  shift, and go to state 70


State 64

   10 exp: exp '?' exp ':' . exp

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 71


State 65

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   25 stmt: stmt IF '(' exp . ')' '{' stmt '}'
   26     | stmt IF '(' exp . ')' '{' stmt '}' ELSE '{' stmt '}'

    ')'  shift, and go to state 72
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34


State 66

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   28 stmt: stmt FOR '(' exp . ';' exp ';' exp ')' '{' stmt '}'

    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34
    ';'  shift, and go to state 73


State 67

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   27 stmt: stmt WHILE '(' exp . ')' '{' stmt '}'

    ')'  shift, and go to state 74
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34


State 68

   21 stmt: IF '(' exp ')' '{' . stmt '}'
   22     | IF '(' exp ')' '{' . stmt '}' ELSE '{' stmt '}'

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 75


State 69

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   24 stmt: FOR '(' exp ';' exp . ';' exp ')' '{' stmt '}'

    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34
    ';'  shift, and go to state 76


State 70

   23 stmt: WHILE '(' exp ')' '{' . stmt '}'

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 77


State 71

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   10    | exp '?' exp ':' exp .
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34

    $default  reduce using rule 10 (exp)


State 72

   25 stmt: stmt IF '(' exp ')' . '{' stmt '}'
   26     | stmt IF '(' exp ')' . '{' stmt '}' ELSE '{' stmt '}'

    '{'  shift, and go to state 78


State 73

   28 stmt: stmt FOR '(' exp ';' . exp ';' exp ')' '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 79


State 74

   27 stmt: stmt WHILE '(' exp ')' . '{' stmt '}'

    '{'  shift, and go to state 80


State 75

   21 stmt: IF '(' exp ')' '{' stmt . '}'
   22     | IF '(' exp ')' '{' stmt . '}' ELSE '{' stmt '}'
   25     | stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39
    '}'    shift, and go to state 81


State 76

   24 stmt: FOR '(' exp ';' exp ';' . exp ')' '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 82


State 77

   23 stmt: WHILE '(' exp ')' '{' stmt . '}'
   25     | stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39
    '}'    shift, and go to state 83


State 78

   25 stmt: stmt IF '(' exp ')' '{' . stmt '}'
   26     | stmt IF '(' exp ')' '{' . stmt '}' ELSE '{' stmt '}'

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 84


State 79

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   28 stmt: stmt FOR '(' exp ';' exp . ';' exp ')' '{' stmt '}'

    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34
    ';'  shift, and go to state 85


State 80

   27 stmt: stmt WHILE '(' exp ')' '{' . stmt '}'

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 86


State 81

   21 stmt: IF '(' exp ')' '{' stmt '}' .
   22     | IF '(' exp ')' '{' stmt '}' . ELSE '{' stmt '}'

    ELSE  shift, and go to state 87

    $default  reduce using rule 21 (stmt)


State 82

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   24 stmt: FOR '(' exp ';' exp ';' exp . ')' '{' stmt '}'

    ')'  shift, and go to state 88
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34


State 83

   23 stmt: WHILE '(' exp ')' '{' stmt '}' .

    $default  reduce using rule 23 (stmt)


State 84

   25 stmt: stmt . IF '(' exp ')' '{' stmt '}'
   25     | stmt IF '(' exp ')' '{' stmt . '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   26     | stmt IF '(' exp ')' '{' stmt . '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39
    '}'    shift, and go to state 89


State 85

   28 stmt: stmt FOR '(' exp ';' exp ';' . exp ')' '{' stmt '}'

    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10

    exp  go to state 90


State 86

   25 stmt: stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   27     | stmt WHILE '(' exp ')' '{' stmt . '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39
    '}'    shift, and go to state 91


State 87

   22 stmt: IF '(' exp ')' '{' stmt '}' ELSE . '{' stmt '}'

    '{'  shift, and go to state 92


State 88

   24 stmt: FOR '(' exp ';' exp ';' exp ')' . '{' stmt '}'

    '{'  shift, and go to state 93


State 89

   25 stmt: stmt IF '(' exp ')' '{' stmt '}' .
   26     | stmt IF '(' exp ')' '{' stmt '}' . ELSE '{' stmt '}'

    ELSE  shift, and go to state 94

    $default  reduce using rule 25 (stmt)


State 90

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | exp . '@' exp
    9    | exp . '%' exp
   10    | exp . '?' exp ':' exp
   11    | exp . LOG exp
   13    | exp . CMP exp
   14    | exp . BIT exp
   28 stmt: stmt FOR '(' exp ';' exp ';' exp . ')' '{' stmt '}'

    ')'  shift, and go to state 95
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    CMP  shift, and go to state 27
    '?'  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33
    '@'  shift, and go to state 34


State 91

   27 stmt: stmt WHILE '(' exp ')' '{' stmt '}' .

    $default  reduce using rule 27 (stmt)


State 92

   22 stmt: IF '(' exp ')' '{' stmt '}' ELSE '{' . stmt '}'

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 96


State 93

   24 stmt: FOR '(' exp ';' exp ';' exp ')' '{' . stmt '}'

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 97


State 94

   26 stmt: stmt IF '(' exp ')' '{' stmt '}' ELSE . '{' stmt '}'

    '{'  shift, and go to state 98


State 95

   28 stmt: stmt FOR '(' exp ';' exp ';' exp ')' . '{' stmt '}'

    '{'  shift, and go to state 99


State 96

   22 stmt: IF '(' exp ')' '{' stmt '}' ELSE '{' stmt . '}'
   25     | stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39
    '}'    shift, and go to state 100


State 97

   24 stmt: FOR '(' exp ';' exp ';' exp ')' '{' stmt . '}'
   25     | stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39
    '}'    shift, and go to state 101


State 98

   26 stmt: stmt IF '(' exp ')' '{' stmt '}' ELSE '{' . stmt '}'

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 102


State 99

   28 stmt: stmt FOR '(' exp ';' exp ';' exp ')' '{' . stmt '}'

    MAIN      shift, and go to state 3
    DATATYPE  shift, and go to state 4
    ID        shift, and go to state 5
    INTEGER   shift, and go to state 6
    FLOAT     shift, and go to state 7
    '('       shift, and go to state 8
    LOG       shift, and go to state 9
    BIT       shift, and go to state 10
    IF        shift, and go to state 11
    FOR       shift, and go to state 12
    WHILE     shift, and go to state 13

    exp   go to state 14
    stmt  go to state 103


State 100

   22 stmt: IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}' .

    $default  reduce using rule 22 (stmt)


State 101

   24 stmt: FOR '(' exp ';' exp ';' exp ')' '{' stmt '}' .

    $default  reduce using rule 24 (stmt)


State 102

   25 stmt: stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   26     | stmt IF '(' exp ')' '{' stmt '}' ELSE '{' stmt . '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39
    '}'    shift, and go to state 104


State 103

   25 stmt: stmt . IF '(' exp ')' '{' stmt '}'
   26     | stmt . IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   27     | stmt . WHILE '(' exp ')' '{' stmt '}'
   28     | stmt . FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   28     | stmt FOR '(' exp ';' exp ';' exp ')' '{' stmt . '}'
   29     | stmt . ERR

    ERR    shift, and go to state 36
    IF     shift, and go to state 37
    FOR    shift, and go to state 38
    WHILE  shift, and go to state 39
    '}'    shift, and go to state 105


State 104

   26 stmt: stmt IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}' .

    $default  reduce using rule 26 (stmt)


State 105

   28 stmt: stmt FOR '(' exp ';' exp ';' exp ')' '{' stmt '}' .

    $default  reduce using rule 28 (stmt)
