Terminals unused in grammar

   ERR


Grammar

    0 $accept: calclist $end

    1 exp: %empty
    2    | exp '+' exp
    3    | exp '*' exp
    4    | exp '-' exp
    5    | exp '/' exp
    6    | exp '%' exp
    7    | exp '@' exp
    8    | INT idlist
    9    | FLOAT idlist
   10    | ID
   11    | ID ASSGN exp
   12    | exp CMP exp
   13    | exp BIT exp
   14    | exp LOG exp
   15    | INTEGER
   16    | REAL
   17    | '(' exp ')'

   18 stmt: stmt ';' stmt
   19     | IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   20     | IF '(' exp ')' '{' stmt '}'
   21     | WHILE '(' exp ')' '{' stmt '}'
   22     | FOR '(' exp ';' exp ';' exp ')' '{' stmt '}'
   23     | exp

   24 idlist: ID
   25       | ID ',' idlist

   26 calclist: %empty
   27         | MAIN '{' stmt '}'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 6
'(' (40) 17 19 20 21 22
')' (41) 17 19 20 21 22
'*' (42) 3
'+' (43) 2
',' (44) 25
'-' (45) 4
'/' (47) 5
';' (59) 18 22
'@' (64) 7
'{' (123) 19 20 21 22 27
'}' (125) 19 20 21 22 27
error (256)
ASSGN (258) 11
CMP (259) 12
LOG (260) 14
BIT (261) 13
IF (262) 19 20
ELSE (263) 19
WHILE (264) 21
FOR (265) 22
ID (266) 10 11 24 25
INTEGER (267) 15
REAL (268) 16
INT (269) 8
FLOAT (270) 9
MAIN (271) 27
ERR (272)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
exp (31)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2
    3 4 5 6 7 11 12 13 14 17 19 20 21 22 23
stmt (32)
    on left: 18 19 20 21 22 23, on right: 18 19 20 21 22 27
idlist (33)
    on left: 24 25, on right: 8 9 25
calclist (34)
    on left: 26 27, on right: 0


State 0

    0 $accept: . calclist $end

    MAIN  shift, and go to state 1

    $default  reduce using rule 26 (calclist)

    calclist  go to state 2


State 1

   27 calclist: MAIN . '{' stmt '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: calclist . $end

    $end  shift, and go to state 4


State 3

   27 calclist: MAIN '{' . stmt '}'

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    FOR      shift, and go to state 7
    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp   go to state 14
    stmt  go to state 15


State 4

    0 $accept: calclist $end .

    $default  accept


State 5

   19 stmt: IF . '(' exp ')' '{' stmt '}' ELSE '{' stmt '}'
   20     | IF . '(' exp ')' '{' stmt '}'

    '('  shift, and go to state 16


State 6

   21 stmt: WHILE . '(' exp ')' '{' stmt '}'

    '('  shift, and go to state 17


State 7

   22 stmt: FOR . '(' exp ';' exp ';' exp ')' '{' stmt '}'

    '('  shift, and go to state 18


State 8

   10 exp: ID .
   11    | ID . ASSGN exp

    ASSGN  shift, and go to state 19

    $default  reduce using rule 10 (exp)


State 9

   15 exp: INTEGER .

    $default  reduce using rule 15 (exp)


State 10

   16 exp: REAL .

    $default  reduce using rule 16 (exp)


State 11

    8 exp: INT . idlist

    ID  shift, and go to state 20

    idlist  go to state 21


State 12

    9 exp: FLOAT . idlist

    ID  shift, and go to state 20

    idlist  go to state 22


State 13

   17 exp: '(' . exp ')'

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 23


State 14

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp
   23 stmt: exp .

    CMP  shift, and go to state 24
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 23 (stmt)


State 15

   18 stmt: stmt . ';' stmt
   27 calclist: MAIN '{' stmt . '}'

    ';'  shift, and go to state 33
    '}'  shift, and go to state 34


State 16

   19 stmt: IF '(' . exp ')' '{' stmt '}' ELSE '{' stmt '}'
   20     | IF '(' . exp ')' '{' stmt '}'

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 35


State 17

   21 stmt: WHILE '(' . exp ')' '{' stmt '}'

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 36


State 18

   22 stmt: FOR '(' . exp ';' exp ';' exp ')' '{' stmt '}'

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 37


State 19

   11 exp: ID ASSGN . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 38


State 20

   24 idlist: ID .
   25       | ID . ',' idlist

    ','  shift, and go to state 39

    $default  reduce using rule 24 (idlist)


State 21

    8 exp: INT idlist .

    $default  reduce using rule 8 (exp)


State 22

    9 exp: FLOAT idlist .

    $default  reduce using rule 9 (exp)


State 23

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp
   17    | '(' exp . ')'

    CMP  shift, and go to state 24
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32
    ')'  shift, and go to state 40


State 24

   12 exp: exp CMP . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 41


State 25

   14 exp: exp LOG . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 42


State 26

   13 exp: exp BIT . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 43


State 27

    2 exp: exp '+' . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 44


State 28

    4 exp: exp '-' . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 45


State 29

    3 exp: exp '*' . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 46


State 30

    5 exp: exp '/' . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 47


State 31

    7 exp: exp '@' . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 48


State 32

    6 exp: exp '%' . exp

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 49


State 33

   18 stmt: stmt ';' . stmt

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    FOR      shift, and go to state 7
    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp   go to state 14
    stmt  go to state 50


State 34

   27 calclist: MAIN '{' stmt '}' .

    $default  reduce using rule 27 (calclist)


State 35

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp
   19 stmt: IF '(' exp . ')' '{' stmt '}' ELSE '{' stmt '}'
   20     | IF '(' exp . ')' '{' stmt '}'

    CMP  shift, and go to state 24
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32
    ')'  shift, and go to state 51


State 36

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp
   21 stmt: WHILE '(' exp . ')' '{' stmt '}'

    CMP  shift, and go to state 24
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32
    ')'  shift, and go to state 52


State 37

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp
   22 stmt: FOR '(' exp . ';' exp ';' exp ')' '{' stmt '}'

    ';'  shift, and go to state 53
    CMP  shift, and go to state 24
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32


State 38

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   11    | ID ASSGN exp .
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp

    CMP  shift, and go to state 24
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 11 (exp)


State 39

   25 idlist: ID ',' . idlist

    ID  shift, and go to state 20

    idlist  go to state 54


State 40

   17 exp: '(' exp ')' .

    $default  reduce using rule 17 (exp)


State 41

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   12    | exp CMP exp .
   13    | exp . BIT exp
   14    | exp . LOG exp

    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 12 (exp)


State 42

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp
   14    | exp LOG exp .

    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 14 (exp)


State 43

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   13    | exp BIT exp .
   14    | exp . LOG exp

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 13 (exp)


State 44

    2 exp: exp . '+' exp
    2    | exp '+' exp .
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 2 (exp)


State 45

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    4    | exp '-' exp .
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 4 (exp)


State 46

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    3    | exp '*' exp .
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp

    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 3 (exp)


State 47

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    5    | exp '/' exp .
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp

    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 5 (exp)


State 48

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
    7    | exp '@' exp .
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp

    '@'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 7 (exp)


State 49

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    6    | exp '%' exp .
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp

    $default  reduce using rule 6 (exp)


State 50

   18 stmt: stmt . ';' stmt
   18     | stmt ';' stmt .

    $default  reduce using rule 18 (stmt)


State 51

   19 stmt: IF '(' exp ')' . '{' stmt '}' ELSE '{' stmt '}'
   20     | IF '(' exp ')' . '{' stmt '}'

    '{'  shift, and go to state 55


State 52

   21 stmt: WHILE '(' exp ')' . '{' stmt '}'

    '{'  shift, and go to state 56


State 53

   22 stmt: FOR '(' exp ';' . exp ';' exp ')' '{' stmt '}'

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 57


State 54

   25 idlist: ID ',' idlist .

    $default  reduce using rule 25 (idlist)


State 55

   19 stmt: IF '(' exp ')' '{' . stmt '}' ELSE '{' stmt '}'
   20     | IF '(' exp ')' '{' . stmt '}'

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    FOR      shift, and go to state 7
    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp   go to state 14
    stmt  go to state 58


State 56

   21 stmt: WHILE '(' exp ')' '{' . stmt '}'

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    FOR      shift, and go to state 7
    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp   go to state 14
    stmt  go to state 59


State 57

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp
   22 stmt: FOR '(' exp ';' exp . ';' exp ')' '{' stmt '}'

    ';'  shift, and go to state 60
    CMP  shift, and go to state 24
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32


State 58

   18 stmt: stmt . ';' stmt
   19     | IF '(' exp ')' '{' stmt . '}' ELSE '{' stmt '}'
   20     | IF '(' exp ')' '{' stmt . '}'

    ';'  shift, and go to state 33
    '}'  shift, and go to state 61


State 59

   18 stmt: stmt . ';' stmt
   21     | WHILE '(' exp ')' '{' stmt . '}'

    ';'  shift, and go to state 33
    '}'  shift, and go to state 62


State 60

   22 stmt: FOR '(' exp ';' exp ';' . exp ')' '{' stmt '}'

    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp  go to state 63


State 61

   19 stmt: IF '(' exp ')' '{' stmt '}' . ELSE '{' stmt '}'
   20     | IF '(' exp ')' '{' stmt '}' .

    ELSE  shift, and go to state 64

    $default  reduce using rule 20 (stmt)


State 62

   21 stmt: WHILE '(' exp ')' '{' stmt '}' .

    $default  reduce using rule 21 (stmt)


State 63

    2 exp: exp . '+' exp
    3    | exp . '*' exp
    4    | exp . '-' exp
    5    | exp . '/' exp
    6    | exp . '%' exp
    7    | exp . '@' exp
   12    | exp . CMP exp
   13    | exp . BIT exp
   14    | exp . LOG exp
   22 stmt: FOR '(' exp ';' exp ';' exp . ')' '{' stmt '}'

    CMP  shift, and go to state 24
    LOG  shift, and go to state 25
    BIT  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    '@'  shift, and go to state 31
    '%'  shift, and go to state 32
    ')'  shift, and go to state 65


State 64

   19 stmt: IF '(' exp ')' '{' stmt '}' ELSE . '{' stmt '}'

    '{'  shift, and go to state 66


State 65

   22 stmt: FOR '(' exp ';' exp ';' exp ')' . '{' stmt '}'

    '{'  shift, and go to state 67


State 66

   19 stmt: IF '(' exp ')' '{' stmt '}' ELSE '{' . stmt '}'

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    FOR      shift, and go to state 7
    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp   go to state 14
    stmt  go to state 68


State 67

   22 stmt: FOR '(' exp ';' exp ';' exp ')' '{' . stmt '}'

    IF       shift, and go to state 5
    WHILE    shift, and go to state 6
    FOR      shift, and go to state 7
    ID       shift, and go to state 8
    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    '('      shift, and go to state 13

    $default  reduce using rule 1 (exp)

    exp   go to state 14
    stmt  go to state 69


State 68

   18 stmt: stmt . ';' stmt
   19     | IF '(' exp ')' '{' stmt '}' ELSE '{' stmt . '}'

    ';'  shift, and go to state 33
    '}'  shift, and go to state 70


State 69

   18 stmt: stmt . ';' stmt
   22     | FOR '(' exp ';' exp ';' exp ')' '{' stmt . '}'

    ';'  shift, and go to state 33
    '}'  shift, and go to state 71


State 70

   19 stmt: IF '(' exp ')' '{' stmt '}' ELSE '{' stmt '}' .

    $default  reduce using rule 19 (stmt)


State 71

   22 stmt: FOR '(' exp ';' exp ';' exp ')' '{' stmt '}' .

    $default  reduce using rule 22 (stmt)
